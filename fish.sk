#물고기
# on fishing:
#     if event-world is "world":
#         if time in event-world is between 9:00 and 16:00:
#             set {_day} to "day"
#         else if time in event-world is between 21:00 and 4:00:
#             set {_day} to "midnight"
#         else:
#             set {_day} to "night"


#         #위치에 따른 강/바다 구분 추가해야 함
#         if biome at player is warm ocean:
#             set {_pos} to "Sea"
#         else:
#             set {_pos} to "River"

#         #낚싯대에 따른 가중치 받는 것 만들어야 함
#         set {_weight} to 15000

#         #낚싯대에 따른 가중치 받는 것 만들어야 함
#         set {_level} to 1

#         if {_weight} <= 15000:
#             set {_wMin} to 0
#             set {_wMax} to {_weight}
#         else if {_weight} is between 15001 and 30000:
#             set {_wMin} to {_weight}-15000
#             set {_wMax} to 15000
#         else:
#             set {_wMin} to 15000
#             set {_wMax} to 15000
#         set {_weightSum} to 0
#         set {_slotMax} to 0


#         set {FishingList::%{_pos}%::row} to 6
#         set {_inv} to chest inventory with {FishingList::%{_pos}%::row} row named "가능목록 %{_pos}%"
#         loop {FishingList::%{_pos}%::item::*}:
#             if {FishingList::%{_pos}%::%{_day}%::%loop-index%} is 1:
#                 if {FishingList::%{_pos}%::sell::%loop-index%} is between {_wMin} and {_wMax}:
#                     add 1 to {_slot}
#                     add 1 to {_slotMax}
#                     set {_fishingTable::item::%{_slot}%} to loop-value
#                     set {_fishingTable::sell::%{_slot}%} to {FishingList::%{_pos}%::sell::%loop-index%}
#                     if {_slot} > {FishingList::%{_pos}%::row} * 9:
#                         exit loop
#                     set slot {_slot} - 1 of {_inv} to loop-value

#         # open {_inv} to player
        
#         set {_num} to 0
#         set {_max} to max({_fishingTable::sell::*}) + min({_fishingTable::sell::*})
#         loop {_slotMax} times:
#             add 1 to {_num}
#             set {_fishingTable::weight::%{_num}%} to 1000000000 / {_fishingTable::sell::%{_num}%}
#             add {_fishingTable::weight::%{_num}%} to {_weightSum}
#         set {_num} to 0
#         loop {_slotMax} times:
#             add 1 to {_num}
#             set {_fishingTable::weight::%{_num}%} to {_fishingTable::weight::%{_num}%} / {_weightSum}
#         set {_num} to 0
#         loop {_slotMax} times:
#             add 1 to {_num}
#             set {_fishingTable::weight::%{_num}%} to {_fishingTable::weight::%{_num}%} ^ (10 / {_level}^1.2)
#             add {_fishingTable::weight::%{_num}%} to {_weightSSum}
#         set {_random} to a random number between 0 and {_weightSSum}
#         set {_num} to 0
#         loop {_slotMax} times:
#             add 1 to {_num}
#             if {_fishingTable::weight::%{_num}%} >= {_random}:
#                 set {_item} to {_fishingTable::item::%{_num}%}
#                 exit loop
#             else:
#                 set {_random} to {_random} - {_fishingTable::weight::%{_num}%}

#         set {_fishingItem} to {_item}
#         set line 1 of lore of {_fishingItem} to "&9물고기"


#         #떡밥에 따른 신선도 추가 필요함
#         set {_freshMin} to 10 + (60 * (({_level}-1)^2/14^2))
#         set {_freshMax} to 30 + (70 * (({_level}-1)^2/14^2))
#         set {_randomFresh} to a random number between {_freshMin} and {_freshMax}
#         set {_randomFresh} to rounded {_randomFresh}
#         if {_randomFresh} >= 70:
#             set {_freshStatus} to "&a"
#         else if {_randomFresh} >= 50:
#             set {_freshStatus} to "&e"
#         else if {_randomFresh} >= 30:
#             set {_freshStatus} to "&6"
#         else if {_randomFresh} >= 1:
#             set {_freshStatus} to "&c"
#         else:
#             set {_freshStatus} to "&4"
#         set line 2 of lore of {_fishingItem} to "&f신선도 %{_freshStatus}%%{_randomFresh}%"
#         set item of caught fish to {_fishingItem}

function randomFish(p :player):: item:
    set {_l} to location of {_p}
    if world of {_l} is "world":
        if time of "world" is between 9:00 and 16:00:
            set {_day} to "day"
        else if time of "world" is between 21:00 and 4:00:
            set {_day} to "midnight"
        else:
            set {_day} to "night"

        set {_lure} to {_p}'s offhand
        if {_lure} is glistering melon slice:
            set {_lureCMD} to custom model data of {_lure}
            #떡밥 전문가 : 떡밥 소모 안함
            if storeAccessory({_p},120) >= 1:
                chance of operationAc(storeAccessory({_p},120),5,60)%:
                    set {_ac120} to 1
                    show 50 nautilus with speed 1 at location of {_p} ~ vector(0,1,0) to {_p}
                    play sound "block.beehive.enter" in ambient category with volume 1 and pitch 2.0 to {_p}
            set item amount of {_lure} to item amount of {_lure} - 1 + {_ac120}
            play sound "entity.axolotl.swim" with volume 2.0 and pitch 2.0 to {_p}
            if {_lureCMD} is 1 or 2 or 3:
                show 100 blue dust with offset of 0.5, 0.5, 0.5 and speed 1 at location of {_p} ~ vector(0,1,0) to {_p}
            else if {_lureCMD} is 4 or 5 or 6:
                show 100 red dust with offset of 0.5, 0.5, 0.5 and speed 1 at location of {_p} ~ vector(0,1,0) to {_p}
            else if {_lureCMD} is 7 or 8 or 9:
                show 100 green dust with offset of 0.5, 0.5, 0.5 and speed 1 at location of {_p} ~ vector(0,1,0) to {_p}
            set {_p}'s offhand to {_lure}

        if biome at {_p} is warm ocean:
            set {_pos} to "Sea"
        else:
            set {_pos} to "River"

        #낚싯대에 따른 가중치 받는 것 만들어야 함
        set {_weight} to 15000
        if {_lureCMD} is 4 or 5:
            add ({_lureCMD} - 3) * 250 to {_weight}
        else if {_lureCMD} is 6:
            add ({_lureCMD} - 3) * 250 + 250 to {_weight}

        #낚싯대에 따른 가중치 받는 것 만들어야 함
        set {_level} to itemLv({_p}'s tool)

        if {_weight} <= 15000:
            set {_wMin} to 0
            set {_wMax} to {_weight}
        else if {_weight} is between 15001 and 30000:
            set {_wMin} to {_weight}-15000
            set {_wMax} to 15000
        else:
            set {_wMin} to 15000
            set {_wMax} to 15000
        set {_weightSum} to 0
        set {_slotMax} to 0


        set {FishingList::%{_pos}%::row} to 6
        set {_inv} to chest inventory with {FishingList::%{_pos}%::row} row named "가능목록 %{_pos}%"
        loop {FishingList::%{_pos}%::item::*}:
            if {FishingList::%{_pos}%::%{_day}%::%loop-index%} is 1:
                if {FishingList::%{_pos}%::sell::%loop-index%} is between {_wMin} and {_wMax}:
                    add 1 to {_slot}
                    add 1 to {_slotMax}
                    set {_fishingTable::item::%{_slot}%} to loop-value
                    set {_fishingTable::sell::%{_slot}%} to {FishingList::%{_pos}%::sell::%loop-index%}
                    if {_slot} > {FishingList::%{_pos}%::row} * 9:
                        exit loop
                    set slot {_slot} - 1 of {_inv} to loop-value
        
        set {_num} to 0
        set {_max} to max({_fishingTable::sell::*}) + min({_fishingTable::sell::*})
        loop {_slotMax} times:
            add 1 to {_num}
            set {_fishingTable::weight::%{_num}%} to 1000000000 / {_fishingTable::sell::%{_num}%}
            add {_fishingTable::weight::%{_num}%} to {_weightSum}
        set {_num} to 0
        loop {_slotMax} times:
            add 1 to {_num}
            set {_fishingTable::weight::%{_num}%} to {_fishingTable::weight::%{_num}%} / {_weightSum}
        set {_num} to 0
        loop {_slotMax} times:
            add 1 to {_num}
            set {_fishingTable::weight::%{_num}%} to {_fishingTable::weight::%{_num}%} ^ (10 / {_level}^1.2)
            add {_fishingTable::weight::%{_num}%} to {_weightSSum}
        set {_random} to a random number between 0 and {_weightSSum}
        set {_num} to 0
        loop {_slotMax} times:
            add 1 to {_num}
            if {_fishingTable::weight::%{_num}%} >= {_random}:
                set {_item} to {_fishingTable::item::%{_num}%}
                exit loop
            else:
                set {_random} to {_random} - {_fishingTable::weight::%{_num}%}

        set {_fishingItem} to {_item}

        #보물 사냥꾼 : 전리품을 바다의 심장으로 변경
        if storeAccessory({_p},118) >= 1:
            chance of operationAc(storeAccessory({_p},118),5,30)%:
                show 100 water wake with offset of 0.5, 0.5, 0.5 and speed 0.2 at location of {_p} ~ vector(0,1,0) to {_p}
                play sound "block.amethyst_cluster.break" in ambient category with volume 2 and pitch 0.0 to {_p}
                play sound "block.amethyst_block.resonate" in ambient category with volume 2 and pitch 0.0 to {_p}
                set {_fishingItem} to heart of the sea

        if {_lureCMD} is 7 or 8:
            add ({_lureCMD} - 6) * 10 to {_doubleChance}
        else if {_lureCMD} is 9:
            add ({_lureCMD} - 6) * 10 + 15 to {_doubleChance}

        #월척 : 추가 물고기
        if storeAccessory({_p},117) >= 1:
            chance of operationAc(storeAccessory({_p},117),10,100)%:
                set {_ac117} to operationAc(storeAccessory({_p},117),1,3)
                show 50 end rod with offset of 0.5, 0.5, 0.5 and speed 0.2 at location of {_p} ~ vector(0,1,0) to {_p}
                play sound "entity.glow_squid.squirt" in ambient category with volume 2 and pitch 2.0 to {_p}
        chance of {_doubleChance}%:
            set {_lureDouble} to 1
        set {_fishCount} to 1 * (1 + {_lureDouble} + {_ac117})
        set {_fishingItem} to {_fishCount} of {_fishingItem}
        if {_fishingItem} is apple:
            set line 1 of lore of {_fishingItem} to "&9물고기"

        if {_fishingItem} is apple:
            set {_freshMin} to 10
            set {_freshMax} to 30 + (20 * (({_level}-1)^2/14^2))
            set {_randomFresh} to a random number between {_freshMin} and {_freshMax}
            set {_randomFresh} to rounded {_randomFresh}
            if {_lureCMD} is 1 or 2:
                add {_lureCMD} * 10 to {_randomFresh}
            else if {_lureCMD} is 3:
                add {_lureCMD} * 10 + 10 to {_randomFresh}
            #싱싱한 물고기 : 신선도 상승
            if storeAccessory({_p},119) >= 1:
                add rounded operationAc(storeAccessory({_p},119),5,30) to {_randomFresh}
                show 50 dragon breath with offset of 0.5, 0.5, 0.5 and speed 0.2 at location of {_p} ~ vector(0,1,0) to {_p}
                play sound "entity.player.splash.high_speed" in ambient category with volume 0.5 and pitch 2.0 to {_p}
            if {_randomFresh} > 100:
                set {_freshStatus} to "&d"
            else if {_randomFresh} >= 70:
                set {_freshStatus} to "&a"
            else if {_randomFresh} >= 50:
                set {_freshStatus} to "&e"
            else if {_randomFresh} >= 30:
                set {_freshStatus} to "&6"
            else if {_randomFresh} >= 1:
                set {_freshStatus} to "&c"
            else:
                set {_freshStatus} to "&4"
            set line 2 of lore of {_fishingItem} to "&f신선도 %{_freshStatus}%%{_randomFresh}%"

        return {_fishingItem}

command /낚시 [<text>] [<text>] [<text>]:
    trigger:
        if player is op:
            if arg-1 is "강":
                set {_pos} to "River"
            else if arg-1 is "바다":
                set {_pos} to "Sea"
            else:
                send "&c[ ! ] &f잘못된 명령어입니다." to player
                exit
            
            if arg-2 is "설정":
                set {FishingList::%{_pos}%::row} to 6
                set {_inv} to chest inventory with {FishingList::%{_pos}%::row} row named "낚시목록 %{_pos}%"
                loop {FishingList::%{_pos}%::item::*}:
                    add 1 to {_slot}
                    if {_slot} > {FishingList::%{_pos}%::row} * 9:
                        exit loop
                    set slot {_slot} - 1 of {_inv} to loop-value
                open {_inv} to player
            else if arg-2 is "판매가격":
                set {_arg3} to arg 3 parsed as integer
                if {_arg3} is not set:
                    send "{@p} 가격은 정수로 입력해 주세요."
                    exit
                set {shop.tmp.%uuid of player%::sell} to {_arg3}
                set {_inv} to chest inventory with {FishingList::%{_pos}%::row} row named "물고기판매가격 %{_pos}%"
                loop {FishingList::%{_pos}%::item::*}:
                    add 1 to {_slot}
                    if {_slot} > {FishingList::%{_pos}%::row} * 9:
                        exit loop
                    delete {_lore::*}
                    set {_itemI} to loop-value
                    add "&e판매가격 &f%{FishingList::%{_pos}%::sell::%loop-index-1%}%" to {_lore::*}
                    set {_itemI}'s lore to {_lore::*}
                    set slot {_slot} - 1 of {_inv} to {_itemI}
                open {_inv} to player
            else if arg-2 is "확인":
                set {_arg3} to arg 3 parsed as integer
                if {_arg3} is not set:
                    send "{@p} 가격은 정수로 입력해 주세요."
                    exit
                send "%{FishingList::%{_pos}%::sell::%{_arg3}%}%"
            else if arg-2 is "이름":
                set {_arg3} to arg 3
                if {_arg3} is not set:
                    send "{@p} 가격은 정수로 입력해 주세요."
                    exit
                set {shop.tmp.%uuid of player%::name} to {_arg3}
                set {_inv} to chest inventory with {FishingList::%{_pos}%::row} row named "물고기이름 %{_pos}%"
                loop {FishingList::%{_pos}%::item::*}:
                    add 1 to {_slot}
                    if {_slot} > {FishingList::%{_pos}%::row} * 9:
                        exit loop
                    set slot {_slot} - 1 of {_inv} to loop-value
                open {_inv} to player
            else if arg-2 is "시간대":
                if arg 3 is "낮":
                    set {_day} to "day"
                else if arg 3 is "밤":
                    set {_day} to "night"
                else if arg 3 is "새벽":
                    set {_day} to "midnight"
                else:
                    exit

                set {_inv} to chest inventory with {FishingList::%{_pos}%::row} row named "%arg 3% %{_pos}%"
                loop {FishingList::%{_pos}%::item::*}:
                    add 1 to {_slot}

                    delete {_lore::*}
                    if {FishingList::%{_pos}%::%{_day}%::%loop-index%} is 1:
                        add "&e%arg 3% &f가능" to {_lore::*}
                    else if {FishingList::%{_pos}%::%{_day}%::%loop-index%} is not set:
                        add "&e%arg 3% &f불가능" to {_lore::*}
                    else if {FishingList::%{_pos}%::%{_day}%::%loop-index%} is 0:
                        add "&e%arg 3% &f불가능" to {_lore::*}

                    if {_slot} > {FishingList::%{_pos}%::row} * 9:
                        exit loop
                    set {_item} to loop-value
                    set {_item}'s lore to {_lore::*}
                    set slot {_slot} - 1 of {_inv} to {_item}
                open {_inv} to player
        else:
            send "&c[ ! ] &f접근할 수 없는 명령어입니다." to player
            
on inventory close:
    event-inventory's display name contain "낚시목록"
    set {_name} to event-inventory's display name
    replace "낚시목록" and " " with "" in {_name}
    delete {FishingList::%{_name}%::item::*}
    loop {FishingList::%{_name}%::row} * 9 times:
        add slot loop-number - 1 of event-inventory to {FishingList::%{_name}%::item::*}
    send "&e%{_name}%"

on inventory click:
    event-inventory's display name contain "물고기판매가격" or "물고기이름" or "낮" or "밤" or "새벽"
    cancel event
    clicked inventory is player' current inventory
    event-slot is not air
    set {_name} to event-inventory's display name
    replace "물고기판매가격" and "물고기이름" and "낮" and "밤" and "새벽" and " " with "" in {_name}
    if event-inventory's display name contain "물고기판매가격":
        if {shop.tmp.%uuid of player%::sell} is 0:
            delete {FishingList::%{_name}%::sell::%index of clicked slot + 1%}
            send "&e%{_name}% &f상점의 &e%index of clicked slot + 1% &f슬롯의 판매가격을 삭제했습니다."
        else:
            set {FishingList::%{_name}%::sell::%index of clicked slot + 1%} to {shop.tmp.%uuid of player%::sell}
            send "&e%{_name}% &f상점의 &e%index of clicked slot + 1% &f슬롯의 판매가격을 &e%{shop.tmp.%uuid of player%::sell}% &f원으로 설정했습니다."
    if event-inventory's display name contain "물고기이름":
        set {_item} to {FishingList::%{_name}%::item::%index of clicked slot + 1%}
        set {_itemname} to colored {shop.tmp.%uuid of player%::name}
        send "%{_itemname}%"
        set name of {_item} to {_itemname}
        set {FishingList::%{_name}%::item::%index of clicked slot + 1%} to {_item}
        set slot index of clicked slot of event-inventory to {_item}
        give {_item} to player
    if event-inventory's display name contain "낮" or "밤" or "새벽":
        if event-inventory's display name contain "낮":
            set {_day} to "day"
            set {_dayKr} to "낮"
        else if event-inventory's display name contain "밤":
            set {_day} to "night"
            set {_dayKr} to "밤"
        else if event-inventory's display name contain "새벽":
            set {_day} to "midnight"
            set {_dayKr} to "새벽"

        if {FishingList::%{_name}%::%{_day}%::%index of clicked slot + 1%} is not set:
            set {FishingList::%{_name}%::%{_day}%::%index of clicked slot + 1%} to 1
        else if {FishingList::%{_name}%::%{_day}%::%index of clicked slot + 1%} is 1:
            set {FishingList::%{_name}%::%{_day}%::%index of clicked slot + 1%} to 0
        else if {FishingList::%{_name}%::%{_day}%::%index of clicked slot + 1%} is 0:
            set {FishingList::%{_name}%::%{_day}%::%index of clicked slot + 1%} to 1
        
        set {_itemValue} to {FishingList::%{_name}%::item::%index of clicked slot + 1%}
        delete {_lore::*}

        if {FishingList::%{_name}%::%{_day}%::%index of clicked slot + 1%} is 1:
            add "&e%{_dayKr}% &f가능" to {_lore::*}
        else if {FishingList::%{_name}%::%{_day}%::%index of clicked slot + 1%} is not set:
            add "&e%{_dayKr}% &f불가능" to {_lore::*}
        else if {FishingList::%{_name}%::%{_day}%::%index of clicked slot + 1%} is 0:
            add "&e%{_dayKr}% &f불가능" to {_lore::*}

        set {_itemValue}'s lore to {_lore::*}
        set slot index of clicked slot of event-inventory to {_itemValue}

#신선도 감소
every 20 seconds:
    loop all players:
        #차가운 가방 : 물고기 신선도 감소 차단
        if storeAccessory(loop-player,121) >= 1:
            set {_ac121} to true
        
        if {_ac121} is not true:
            chance of 33%:
                loop loop-player's inventory:
                    if line 1 of lore of loop-value-2 is "&9물고기":
                        set {_fresh} to uncolored line 2 of lore of loop-value-2
                        replace all "신선도" and " " with "" in {_fresh}
                        set {_fresh} to {_fresh} parsed as integer
                        if {_fresh} >= 1:
                            set {_fresh} to {_fresh}-1
                        if {_fresh} > 100:
                            set {_freshStatus} to "&d"
                        else if {_fresh} >= 70:
                            set {_freshStatus} to "&a"
                        else if {_fresh} >= 50:
                            set {_freshStatus} to "&e"
                        else if {_fresh} >= 30:
                            set {_freshStatus} to "&6"
                        else if {_fresh} >= 1:
                            set {_freshStatus} to "&c"
                        else:
                            set {_freshStatus} to "&4"
                        set line 2 of lore of loop-value-2 to "&f신선도 %{_freshStatus}%%{_fresh}%"